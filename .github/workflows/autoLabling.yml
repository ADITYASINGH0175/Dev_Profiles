name: Auto Label Issues and PRs

permissions:
  issues: write
  pull-requests: write

on:
  pull_request_target:
    types:
      - opened
  issues:
    types:
      - opened

jobs:
  auto-label:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Add default labels to PRs
        if: github.event_name == 'pull_request_target'
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.addLabels({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['Hacktoberfest_2024', 'Hacktoberfest-accepted', 'Hacktoberfest']
            })

      - name: Add default labels to Issues
        if: github.event_name == 'issues'
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.addLabels({
              issue_number: context.payload.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['Hacktoberfest_2024', 'Hacktoberfest-accepted', 'Hacktoberfest']
            })

  label-prs:
    runs-on: ubuntu-latest

    steps:
      - name: Determine PR Label
        id: set-pr-label
        run: |
          if [[ "${{ github.event.pull_request.title }}" =~ bug ]]; then
            echo "::set-output name=label::bug"
          elif [[ "${{ github.event.pull_request.title }}" =~ documentation ]]; then
            echo "::set-output name=label::documentation"
          elif [[ "${{ github.event.pull_request.title }}" =~ enhancement ]]; then
            echo "::set-output name=label::enhancement"
          elif [[ "${{ github.event.pull_request.title }}" =~ hacktoberfest ]]; then
            echo "::set-output name=label::hacktoberfest"
          fi

      - name: Apply PR Label
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.addLabels({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['${{ steps.set-pr-label.outputs.label }}']
            })

  label-issues:
    runs-on: ubuntu-latest

    steps:
      - name: Determine Issue Label
        id: set-issue-label
        run: |
          if [[ "${{ github.event.issue.title }}" =~ bug ]]; then
            echo "::set-output name=label::bug"
          elif [[ "${{ github.event.issue.title }}" =~ "Something isn't working" ]]; then
            echo "::set-output name=label::Something isn't working"
          elif [[ "${{ github.event.issue.title }}" =~ documentation ]]; then
            echo "::set-output name=label::documentation"
          elif [[ "${{ github.event.issue.title }}" =~ "Improvements or additions to documentation" ]]; then
            echo "::set-output name=label::Improvements or additions to documentation"
          elif [[ "${{ github.event.issue.title }}" =~ duplicate ]]; then
            echo "::set-output name=label::duplicate"
          elif [[ "${{ github.event.issue.title }}" =~ enhancement ]]; then
            echo "::set-output name=label::enhancement"
          elif [[ "${{ github.event.issue.title }}" =~ "good first issue" ]]; then
            echo "::set-output name=label::good first issue"
          elif [[ "${{ github.event.issue.title }}" =~ hacktoberfest ]]; then
            echo "::set-output name=label::hacktoberfest"
          elif [[ "${{ github.event.issue.title }}" =~ question ]]; then
            echo "::set-output name=label::question"
          fi

      - name: Apply Issue Label
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.addLabels({
              issue_number: context.payload.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['${{ steps.set-issue-label.outputs.label }}']
            })
